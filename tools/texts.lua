if (_G["texts"]) then
    return _G["texts"]
end

local texts = {
        README = {
            ES = {
            {
                title = " ¬∑ INTRO: ",
                lines = {
                    'Ensamblador en lenguage m√°quina HACK-ASM, tanto de forma mnem√≥nica ',
                    '(simb√≥lica) como binaria, es un Ensamblador de archivos .asm de tipo HACK ',
                    'con una interfaz mini-REPL. ',
                    'Esta app convierte c√≥digo HACK-ASM a binario HACK-BIN (con formato de ',
                    'texto plano) para poder reproducirse en la m√°quina virtual ‚ÄúHack Computer‚Äù.',
                    'Digamos que es el contenedor para el ensamblador, ya que adem√°s puede ',
                    'realizar otras tareas (y m√°s que se integrar√°n en futuras versiones) como ',
                    'para considerarse una herramienta con m√∫ltiples usos. ',
                    'La app permite parsear un archivo ‚Äò*.asm‚Äô (con mnem√≥nicos Hack) y ',
                    'convertirlo a ‚Äò*.hack‚Äô (binario en texto) de forma visualmente atractiva. ',
                    'Tambi√©n permite la comparaci√≥n del binario optenido con un segundo archivo ',
                    '‚Äò*.hack‚Äô mostrando los resultados en la zona de mensajes inferior. ',
                    '',
                    'Tiene a√±adidos como poder obtener un c√≥digo ASM final mucho m√°s limpio y ',
                    'puro donde se sustituyen valores de variables y labels por sus referencias ',
                    'directas en el mapa de memoria.',
                    "",
                }
            },
            {
                title = " ¬∑ ANTECEDENTES: ",
                lines = {
                    'üìã HackAssembler: ',
                    'Este es el resultado del complet√≠simo curso NAND2Tetris donde terminas ',
                    'construyendo, de forma ideal, un PC partiendo de los elementos m√°s b√°sicos ',
                    'como son las puertas l√≥gicas Nand hasta elementos m√°s complicados como ',
                    'estructuras de registros y memorias, ALU, ‚Ä¶ hasta llegar a un mini-VC con ',
                    'todo el hardware simulado mediante software.  ',
                    'Prec√≠samente este ensamblador es la pr√°ctica del tema ‚Äò6. Assembler‚Äô donde ',
                    'instan a construir tu propio ensamblador para lenguage m√°quina ASM-HACK-BIN ',
                    'escrito en un lenguage de tu elecci√≥n. ',
                    'En este caso he elegido el lenguage LUA (utilizando el framework L√ñVE), ',
                    'aunque tambi√©n he creado otra versi√≥n m√°s visual en javascript (pero ',
                    'infinitamente m√°s lenta).  ',
                    'Esta versi√≥n se ha basado en otra anterior orientada a navegadores web ',
                    'codificada en javascript "HackAssembler.js v1.0.1".',
                    "",
                }
            },
            {
                title = " ¬∑ CARACTER√çSTICAS: ",
                lines = {
                    '‚å®Ô∏è La parte m√°s original de la APP, a mi parecer, es prec√≠samente lo que no ',
                    'es ‚Äúensamblador‚Äù, quiero decir la forma de llegar al ensamblador a trav√©s ',
                    'de una pantalla tipo consola o terminal ‚å®Ô∏è donde se permiten introducir ',
                    'comandos como asm para la ejecuci√≥n de este ensamblador, u otros como ',
                    '<< help, dir, cmd, ver, exec, help, ‚Ä¶ >>.  ',
                    'As√≠ que tenemos una app tipo REPL, con tem√°tica retro-futurista, con aspecto ',
                    'de app terminal-8-bits basado en consola tipo MS-Dos, con altas prestaciones ',
                    'y colores ne√≥n (casi cyberpunk), ‚Ä¶ y encima programado en L√ñVE (Lua 5.1), ‚Ä¶  ',
                    '',
                    '¬° QUE M√ÅS SE PUEDE PEDIR !, el disfrute est√° asegurado para todos los que ',
                    'a√±oren los a√±os 80‚Äôs.  ',
                    '',
                    'P.D: La APP s√≥lo se ha podido probar en una m√°quina potente moderna ',
                    '(i7-64bits, 12Gb RAM, 2 Tb HDD) nada retro-futurista, y consume entre 3 y ',
                    '30 Mb de memoria (dependiendo del tiempo de uso y la cantidad de comandos ',
                    'ejecutados).',
                    "",
                }
            },
            {
                title = " ¬∑ COMANDOS ",
                lines = {
                    "Los comandos m√°s relevantes son los siguientes: ",
                    "",
                    '  - asm: Pantalla para el Ensamblador donde comprobamos visualmente el ',
                    'c√≥digo ASM-HACK y podemos realizar comparaci√≥n con otros archivos Hack.',
                    "  - cmd : muestra el command.com de esta consola.",
                    "  - ver : versi√≥n del command.com",
                    "  - vol : el vol√∫men (ficticio), algo como 'C:>'",
                    "  - hello : algunos cr√©ditos",
                    --"  - ? : sorpresa !",
                    "  - pause : pausa la consola hasta pulsar una tecla cualquiera.",
                    "  - del : borrar ..",
                    "  - exit : sale guardando todos los avances.",
                    "  - escape : sale SIN guardar.",
                    "  - cls : borra la consola.",
                    --"  - dir : muestra un listado de archivos de ejemplo.",
                    "  - help : muestra esta ayuda.",
                    "  - readme : visualiza el archivo Readme.md (MUY INTERESANTE)",
                    "  - intro : la ventana de introducci√≥n (MUY INTERESANTE)",
                    "  - borders : habilita / deshabilita los bordes en las ventanas.",
                    "  - procss : cuenta los procesadores del sistema",
                    "  - exec : comando MUY POTENTE. Muestra el 'cmd' del S.O.",
                    "  - pwinfo : informaci√≥n de la bater√≠a",
                    "  - date : fecha del sistema",
                    "  - os : sistema operativo [S.O.]",
                    "  - clipb : muestra el √∫ltimo texto copiado en el clipboard",
                    "  - google : abre el navegador",
                    "  - nand2tetris : abre la p√°gina web www.nand2tetris.org",
                    "  - res : permite cambiar la resoluci√≥n de la pantalla del juego."
                }
            },
            {
                title = "",
                lines = {}
            },
            {
                title = "",
                lines = { "* Los archivos de la app se guardan en la carpeta de salvado del S.O." }
            },
            {
                title = "",
                lines = {}
            },
            {
                title = "",
                lines = {}
            },
            {
                title = "                   'Hack-Assembler'",
                lines = { "", "                 .. by GuerraTron24 <dinertron@gmail.com> .." }
            }
        },
        EN = {
            {
                title = " ¬∑ INTRO: ",
                lines = {
                    'HACK-ASM machine language assembler, both mnemonic (symbolic) ',
                    'and binary, is a HACK-type .asm file assembler with a ',
                    'mini-REPL interface. ',
                    'This app converts HACK-ASM code to HACK-BIN binary (in plain ',
                    'text format) so it can be played on the ‚ÄúHack Computer‚Äù virtual ',
                    'machine.',
                    'Let\'s say it is the container for the assembler, since it can also perform other tasks (and more that will be integrated in future versions) such as ', 'to be considered a tool with multiple uses. ', 'The app allows you to parse a ‚Äò*.asm‚Äô file (with Hack mnemonics) and ', 'convert it to ‚Äò*.hack‚Äô (binary in text) in a visually attractive way. ',
                    'It also allows the comparison of the obtained binary with a second file ',
                    '‚Äò*.hack‚Äô showing the results in the lower message area. ',
                    '',
                    'It has additions such as being able to obtain a much cleaner and purer final ASM code where variable and label values ‚Äã‚Äãare replaced by their direct references ',
                    'in the memory map.',
                    "",
                }
            },
            {
                title = " ¬∑ BACKGROUND: ",
                lines = {
                    'üìã HackAssembler: ',
                    'This is the result of the very complete NAND2Tetris course where you end up ',
                    'building, ideally, a PC starting from the most basic elements ',
                    'such as Nand logic gates to more complicated elements such as ',
                    'register and memory structures, ALU, ‚Ä¶ until reaching a mini-VC with ',
                    'all the hardware simulated by software. ',
                    'Precisely this assembler is the practice of the topic ‚Äò6. Assembler‚Äô where ',
                    'they urge you to build your own assembler for the ASM-HACK-BIN machine language ',
                    'written in a language of your choice. ',
                    'In this case I have chosen the LUA language (using the L√ñVE framework), ',
                    'although I have also created another more visual version in javascript (but ',
                    'infinitely slower). ',
                    'This version is based on a previous version aimed at web browsers.',
                    'coded in javascript "HackAssembler.js v1.0.1".',
                    "",
                }
            },
            {
                title = " ¬∑ FEATURES: ",
                lines = {
                    '‚å®Ô∏è The most original part of the APP, in my opinion, is precisely what is not ',
                    'an ‚Äúassembler‚Äù, I mean the way to get to the assembler through ',
                    'a console or terminal type screen ‚å®Ô∏è where you can enter ',
                    'commands like asm to run this assembler, or others like ',
                    '<< help, dir, cmd, ver, exec, help, ‚Ä¶ >>. ',
                    'So we have a REPL type app, with a retro-futuristic theme, with the look of ',
                    'an 8-bit terminal app based on an MS-Dos type console, with high performance ',
                    'and neon colors (almost cyberpunk), ‚Ä¶ and on top of that programmed in L√ñVE (Lua 5.1), ‚Ä¶ ',
                    '',
                    'WHAT MORE COULD YOU ASK FOR! Enjoyment is guaranteed for all those who ',
                    'long for the 80s. ',
                    '',
                    'P.S.: The APP has only been tested on a modern, powerful machine ',
                    '(i7-64bits, 12Gb RAM, 2 Tb HDD) not at all retro-futuristic, and it consumes between 3 and ',
                    '30 Mb of memory (depending on the time of use and the number of commands ',
                    'executed).',
                    "",
                }
            },
            {
                title = " ¬∑ COMMANDS ",
                lines = {
                    "The most relevant commands are the following: ",
                    "",
                    ' - asm: Screen for the Assembler where we can visually check the ',
                    'ASM-HACK code and we can make a comparison with other Hack files.',
                    " - cmd : shows the command.com of this console.",
                    " - ver : version of the command.com",
                    " - vol : the volume (fictitious), something like 'C:>'",
                    " - hello : some credits",
                    --" - ? : surprise !",
                    " - pause : pauses the console until any key is pressed.",
                    " - del : delete ..",
                    " - exit : exits saving all progress.",
                    " - escape : exits WITHOUT saving.",
                    " - cls : deletes the console.",
                    --" - dir : shows a list of sample files.",
                    " - help : shows this help.",
                    " - readme : displays the Readme.md file (VERY INTERESTING)",
                    " - intro : the introduction window (VERY INTERESTING)",
                    " - intro : the introduction window (VERY INTERESTING)",
                    " - borders : enable/disable borders on windows.",
                    " - procss : count system processors",
                    " - exec : VERY POWERFUL command. Displays the OS 'cmd'",
                    " - pwinfo : battery information",
                    " - date : system date",
                    " - os : operating system [OS]",
                    " - clipb : display the last text copied to the clipboard",
                    " - google : open the browser",
                    " - nand2tetris : open the website www.nand2tetris.org",
                    " - res : allows you to change the game screen resolution."
                }
            },
            {
                title = "",
                lines = {}
            },
            {
                title = "",
                lines = { "* App files are saved in the OS save folder." }
            },
            {
                title = "",
                lines = {}
            },
            {
                title = "",
                lines = {}
            },
            {
                title = "                   'Hack-Assembler'",
                lines = { "", "                 .. by GuerraTron24 <dinertron@gmail.com> .." }
            }
        }
    },

    HELP = {
        ES = {
            {
                title = " ¬∑ INTRO: ",
                lines = {
                    'Ensamblador en lenguage m√°quina HACK-ASM, tanto de forma mnem√≥nica ',
                    '(simb√≥lica) como binaria, es un Ensamblador de archivos .asm de tipo HACK ',
                    'con una interfaz mini-REPL. ',
                    'La app permite parsear un archivo ‚Äò*.asm‚Äô (con mnem√≥nicos Hack) y ',
                    'convertirlo a ‚Äò*.hack‚Äô (binario en texto) de forma visualmente atractiva. ',
                    'Tambi√©n permite la comparaci√≥n del binario optenido con un segundo archivo ',
                    '‚Äò*.hack‚Äô mostrando los resultados en la zona de mensajes inferior. ',
                    '',
                    'Tiene a√±adidos como poder obtener un c√≥digo ASM final mucho m√°s limpio y ',
                    'puro donde se sustituyen valores de variables y labels por sus referencias ',
                    'directas en el mapa de memoria.',
                    "",
                }
            },
            {
                title = " ¬∑ USO: ",
                lines = {
                    'La herramienta se ha dise√±ado para dos formas distintas de utilizaci√≥n: ',
                    'sin Interfaz Gr√°fica o con UI. ',
                    ' - 1/ ',
                    'La APP puede ejecutarse en la "l√≠nea de comandos" pas√°ndole como argumento ',
                    'el archivo "ruta/*.asm" (con su ruta relativa al ejecutable) y la app lanzar√° ',
                    'el ensamblador de forma transparente, realizando las labores de parseado, ',
                    'comparaci√≥n y guardado de resultados. ',
                    '',
                    ' - 2/ ',
                    'Tambi√©n puede ejecutarse sin par√°metros mostrando una emulaci√≥n de "terminal", ',
                    'digamos un "mini-REPL", donde admite ciertos comandos de los cuales el m√°s ',
                    'importante es "asm" que permite las mismas operaciones anteriores pero en ',
                    'formato "visual" mucho m√°s atractivo. ',
                    '',
                    'La APP guardar√° adem√°s del binario calculado "*.hack", un registro "*.log" y ',
                    'otros como "*.asm" mejorados donde se reemplazan "variables y etiquetas" ',
                    'por sus valores en el mapa de memoria.',
                    '',
                    ' * IMPORTANTE: ',
                    '   ---------- ',
                    'Todos los archivos se guardar√°n forzosamente en el directorio de "salvado" ',
                    'que es dependiente del S.O., por ejemplo en Windows puede ser algo como: ',
                    '<<C:\\Users\\my_user_name\\AppData\\Roaming\\LOVE\\HackAssembler\\samples>>',
                    "",
                }
            },
            {
                title = " ¬∑ COMANDOS ",
                lines = {
                    "Los comandos m√°s relevantes son los siguientes: ",
                    "",
                    '  - asm. Pantalla para el Ensamblador donde comprobamos visualmente el ',
                    'c√≥digo ASM-HACK y podemos realizar comparaci√≥n con otros archivos Hack.',
                    "  - cmd : muestra el command.com de esta consola.",
                    "  - ver : versi√≥n del command.com",
                    "  - vol : el vol√∫men (ficticio), algo como 'C:>'",
                    "  - hello : algunos cr√©ditos",
                    --"  - ? : sorpresa !",
                    "  - pause : pausa la consola hasta pulsar una tecla cualquiera.",
                    "  - del : borrar ..",
                    "  - exit : sale guardando todos los avances.",
                    "  - escape : sale SIN guardar.",
                    "  - cls : borra la consola.",
                    --"  - dir : muestra un listado de archivos de ejemplo.",
                    "  - help : muestra esta ayuda.",
                    "  - readme : visualiza el archivo Readme.md (MUY INTERESANTE)",
                    "  - intro : la ventana de introducci√≥n (MUY INTERESANTE)",
                    "  - borders : habilita / deshabilita los bordes en las ventanas.",
                    "  - procss : cuenta los procesadores del sistema",
                    "  - exec : comando MUY POTENTE. Muestra el 'cmd' del S.O.",
                    "  - pwinfo : informaci√≥n de la bater√≠a",
                    "  - date : fecha del sistema",
                    "  - os : sistema operativo [S.O.]",
                    "  - clipb : muestra el √∫ltimo texto copiado en el clipboard",
                    "  - google : abre el navegador",
                    "  - nand2tetris : abre la p√°gina web www.nand2tetris.org",
                    "  - res : permite cambiar la resoluci√≥n de la pantalla del juego."
                }
            },
            {
                title = " ¬∑ TECLAS ESPECIALES: ",
                lines = {
                    "Aparte de los comandos reconocidos (m√°s de 20), existen ciertas teclas ",
                    "especiales para la interacci√≥n con el usuario. Algunas act√∫an como ",
                    "comandos invisibles, otras como teclas de direcci√≥n, ... Tambi√©n el  ",
                    "rat√≥n se permite en ciertas pantallas para seleccionar objetos o pulsar ",
                    "botones.",
                    "Por regla general, las teclas sensibles act√∫an de la siguiente manera: ",
                    "",
                    "  - F1 = Captura instant√°nea de consumo de recursos en depuraci√≥n",
                    "  - F2 = Cierra la Room actual y regresa a la Console (sin guardar ",
                    "avances)",
                    "  - F5 = Aceptar-Exit, Regresa a Console o si ya est√° en Console sale ",
                    "del juego",
                    "  - escape = Cancelar, Regresa al men√∫ principal Console (bot√≥n 'CANCELAR')",
                    "si est√° en Console SALE SIN GUARDAR.",
                    "  - backspace = borra caracteres en campos de entrada de texto (En ",
                    "Console-InputLineModule)",
                    "  - enter [return] = Acepta texto en campos de entrada (En Console-",
                    "InputLineModule), en otras pantallas es el bot√≥n 'ACEPTAR'",
                    "  - [+, -] = Zoom (in-out) en Console, y otras",
                    "  - up-down = Desplazador en los Text-Area (primero hay que situarse encima)",
                    '.. y en algunas pantallas (esta misma)',
                    "  - ... = Otras posibles teclas se transmiten a trav√©s de 'love.textinput'"
                }
            },
            {
                title = "",
                lines = {}
            },
            {
                title = "",
                lines = { "* Los archivos de la app se guardan en la carpeta de salvado del S.O." }
            },
            {
                title = "",
                lines = {}
            },
            {
                title = "",
                lines = {}
            },
            {
                title = "                   'Hack-Assembler'",
                lines = { "", "                 .. by GuerraTron24 <dinertron@gmail.com> .." }
            }
        },
        EN = {
            {
                title = " ¬∑ INTRO: ",
                lines = {
                    'HACK-ASM machine language assembler, both mnemonic (symbolic) and ',
                    'binary, is a HACK-type .asm file assembler with a mini-REPL interface. ',
                    'The app allows you to parse a ‚Äò*.asm‚Äô file (with Hack mnemonics) and ',
                    'convert it to a ‚Äò*.hack‚Äô (binary text) in a visually attractive way. ',
                    'It also allows the comparison of the obtained binary with a second ‚Äò*.hack‚Äô ',
                    'file, showing the results in the lower message area. ',
                    '',
                    'It has additions such as being able to obtain a much cleaner and purer ',
                    'final ASM code where variable and label values ‚Äã‚Äãare replaced by their ',
                    'direct references in the memory map.',
                    "",
                }
            },
            {
                title = " ¬∑ USE: ",
                lines = {
                    'The tool has been designed for two different ways of use: ',
                    'without a Graphical Interface or with UI. ',
                    ' - 1/ ',
                    'The APP can be executed in the "command line" passing as an argument the ',
                    'file "path/*.asm" (with its path relative to the executable) and the app will ',
                    'launch the assembler transparently, performing the tasks of parsing, ',
                    'comparing and saving results. ',
                    '',
                    ' - 2/ ',
                    'It can also be executed without parameters showing a "terminal" emulation, ',
                    'let\'s say a "mini-REPL", where it admits certain commands of which the most ',
                    'important is "asm" that allows the same previous operations but in a much ',
                    'more attractive "visual" format. ',
                    '',
                    'The APP will save, in addition to the calculated binary "*.hack", a "*.log" ',
                    'log and others such as "*.asm" improved where "variables and labels" are ',
                    'replaced by their values ‚Äã‚Äãin the memory map.',
                    '',
                    ' * IMPORTANT: ',
                    '   --------- ',
                    'All files will be forcibly saved in the "save" directory ',
                    'which is OS dependent, for example in Windows it can be something like: ',
                    '<<C:\\Users\\my_user_name\\AppData\\Roaming\\LOVE\\HackAssembler\\samples>>',
                    "",
                }
            },
            {
                title = " ¬∑ COMMANDS ",
                lines = {
                    "The most relevant commands are the following: ",
                    "",
                    ' - asm: Screen for the Assembler where we visually check the ',
                    'ASM-HACK code and we can make a comparison with other Hack files.',
                    " - cmd : shows the command.com of this console.",
                    " - ver : version of the command.com",
                    " - vol : the volume (fictitious), something like 'C:>'",
                    " - hello : some credits",
                    --" - ? : surprise !",
                    " - pause : pauses the console until any key is pressed.",
                    " - del : delete ..",
                    " - exit : exits saving all progress.",
                    " - escape : exits WITHOUT saving.",
                    " - cls : deletes the console.",
                    --" - dir : shows a list of example files.",
                    " - help : shows this help.",
                    " - readme : displays the Readme.md file (VERY INTERESTING)",
                    " - intro : the intro window (VERY INTERESTING)",
                    " - borders : enable/disable borders on windows.",
                    " - procss : count the processors on the system",
                    " - exec : VERY POWERFUL command. Shows the 'cmd' of the OS.",
                    " - pwinfo : battery information",
                    " - date : system date",
                    " - os : operating system [OS]",
                    " - clipb : show the last text copied to the clipboard",
                    " - google : open the browser",
                    " - nand2tetris : open the website www.nand2tetris.org",
                    " - res : allows you to change the game screen resolution."
                }
            },
            {
                title = " ¬∑ SPECIAL KEYS: ",
                lines = {
                    'Apart from the recognized commands (more than 20), there are certain ',
                    'special keys for user interaction. Some act as invisible commands, others ',
                    'as arrow keys, ... Also the mouse is allowed in certain screens to select ',
                    'objects or press buttons.',
                    "As a rule, the sensitive keys act as follows:",
                    "",
                    "- F1 = Snapshot of resource consumption in debugging",
                    '- F2 = Close the current Room and return to the Console (without saving) ',
                    '       progresses',
                    '- F5 = OK-Exit, Return to Console or if you are already in Console exit ',
                    '       the game',
                    "- escape = Cancel, Return to the main Console menu ('CANCEL' button),",
                    "           if you are in Console EXIT WITHOUT SAVING.",
                    '- backspace = delete characters in text input fields (In Console-',
                    '              InputLineModule)',
                    " - enter [return] = Accepts text in input fields (in Console-",
                    "              InputLineModule), in other screens it is the 'OK' button",
                    " - [+, -] = Zoom (in-out) in Console, and others",
                    " - up-down = Scroller in Text-Areas (you have to stand on it first)",
                    '.. and in some screens (this one)',
                    " - ... = Other possible keys are transmitted through 'love.textinput'"
                }
            },
            {
                title = "",
                lines = {}
            },
            {
                title = "",
                lines = { "* App files are saved in the OS save folder." }
            },
            {
                title = "",
                lines = {}
            },
            {
                title = "",
                lines = {}
            },
            {
                title = "                   'Hack-Assembler'",
                lines = { "", "                 .. by GuerraTron24 <dinertron@gmail.com> .." }
            }
        }
    },

    SAVE_AND_EXIT = {
        ES = {
            {
                title = "guardar y salir",
                lines = {""}
            }
        },
        EN = {
            {
                title = "save and exit",
                lines = { "" }
            }
        }
    }
}

return texts

--[[
return {
    readme = texts.README, -- [LANG]
}]]